CREATE TABLE MSG_LOGS_WMSROOT (
  ID            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  TIMESTAMP     VARCHAR2(32),  -- o DATE si puedes convertirlo
  NIVEL         VARCHAR2(20),
  COMPONENTE    VARCHAR2(200),
  ORIGEN        VARCHAR2(200),
  MENSAJE       CLOB,
  FECHA_INSERT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE INDEX IDX_LOGS_NIVEL ON LOGS (NIVEL);
CREATE INDEX IDX_LOGS_FECHA ON LOGS (FECHA);



CREATE TABLE ALERTAMIENTOS (
    -- ID único para cada alertamiento. Se usa una secuencia y un trigger para autoincrementar.
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,

    -- Fecha y hora exacta en que se generó el alertamiento.
    FECHA_HORA TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,

    -- Nivel de severidad del alertamiento (INFO, WARNING, ERROR, CRITICAL).
    -- Se recomienda usar un CHECK CONSTRAINT para validar los valores.
    NIVEL VARCHAR2(50) NOT NULL,

    -- Mensaje descriptivo del alertamiento.
    MENSAJE VARCHAR2(4000) NOT NULL,

    -- Origen o fuente del alertamiento (ej. 'Servicio de Pagos', 'Microservicio de Usuarios').
    ORIGEN VARCHAR2(255),

    -- Identificador de la aplicación o módulo específico que generó el alertamiento (ej. 'AUTH_SERVICE', 'PAYMENT_GATEWAY').
    APLICACION VARCHAR2(100),

    -- Indica si el alertamiento ha sido leído o resuelto (por defecto, no resuelto).
    RESUELTO CHAR(1) DEFAULT 'N' NOT NULL,

    -- Detalles adicionales en formato JSON (si es necesario almacenar datos estructurados).
    DETALLES_JSON CLOB,

    -- Restricción de clave primaria.
    CONSTRAINT PK_ALERTAMIENTOS PRIMARY KEY (ID),

    -- Restricción para validar los niveles de alertamiento permitidos.
    CONSTRAINT CK_NIVEL_ALERTA CHECK (NIVEL IN ('INFO', 'WARNING', 'ERROR', 'CRITICAL'))
);